<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>${groupId}</groupId>
        <artifactId>${rootArtifactId}</artifactId>
        <version>${version}</version>
    </parent>

    <artifactId>${parentArtifactId}-service</artifactId>
    <name>${parentArtifactId}-service</name>
    <packaging>jar</packaging>

    <properties>
        <snippetsDirectory>${project.build.directory}/generated-snippets</snippetsDirectory>
        <!-- set 'flase': Devtools only refresh browser on static resource changes (ignore any change in the code) -->
        <spring.devtools.remote.restart.enabled>false</spring.devtools.remote.restart.enabled>
    </properties>

    <build>
        <plugins>
            <plugin>
                <groupId>io.fabric8</groupId>
                <artifactId>docker-maven-plugin</artifactId>
                <configuration>
                    <autoPull>always</autoPull>
                    <registry>${docker.registry}</registry>
                    <showLogs>true</showLogs>
                    <useColor>true</useColor>
                    <images>
                        <image>
                            <alias>eureka</alias>
                            <name>oss-eureka:${oss-release.version}</name>
                            <run>
                                <cmd>standalone</cmd>
                                <ports>
                                    <port>${it.eureka.host}:${it.eureka.port}:8761</port>
                                </ports>
                                <env>
                                    <SPRING_PROFILES_ACTIVE>standalone</SPRING_PROFILES_ACTIVE>
                                    <EUREKA_INSTANCE_HOSTNAME>${it.eureka.host}</EUREKA_INSTANCE_HOSTNAME>
                                    <SPRING_CLOUD_CLIENT_HOSTNAME>${it.eureka.host}</SPRING_CLOUD_CLIENT_HOSTNAME>
                                    <SPRING_CLOUD_CLIENT_IP_ADDRESS>127.0.0.1</SPRING_CLOUD_CLIENT_IP_ADDRESS>
                                    <EUREKA_INSTANCE_NONSECUREPORT>${it.eureka.port}</EUREKA_INSTANCE_NONSECUREPORT>
                                    <SECURITY_BASIC_ENABLED>false</SECURITY_BASIC_ENABLED>
                                </env>
                                <labels>
                                    <version>${project.version}</version>
                                    <artifactId>${project.artifactId}</artifactId>
                                </labels>
                                <log>
                                    <prefix>IT-EUREKA</prefix>
                                    <date>DEFAULT</date>
                                    <color>MAGENTA</color>
                                </log>
                                <wait>
                                    <http>
                                        <url>http://${it.eureka.host}:${it.eureka.port}</url>
                                        <method>GET</method>
                                        <status>200</status>
                                    </http>
                                    <time>60000</time>
                                </wait>
                            </run>
                        </image>
                    </images>
                </configuration>
                <executions>
                    <execution>
                        <id>prepare-docker-integration</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>start</goal>
                        </goals>
                        <configuration>
                            <skip>${maven.integration-test.skip}</skip>
                        </configuration>
                    </execution>
                    <execution>
                        <id>stop-docker-integration</id>
                        <phase>post-integration-test</phase>
                        <goals>
                            <goal>stop</goal>
                        </goals>
                        <configuration>
                            <allContainers>false</allContainers>
                            <keepContainer>false</keepContainer>
                            <keepRunning>false</keepRunning>
                            <removeVolumes>true</removeVolumes>
                            <skip>${maven.integration-test.skip}</skip>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>build-helper-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>reserve-integration-server-port</id>
                        <goals>
                            <goal>reserve-network-port</goal>
                        </goals>
                        <phase>process-resources</phase>
                        <configuration>
                            <portNames>
                                <portName>integration.server.port</portName>
                            </portNames>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <!-- usage: mvn spring-boot:run -->
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <version>${spring-boot.version}</version>
                <configuration>
                    <addResources>true</addResources>
                    <!-- see: https://github.com/spring-projects/spring-boot/issues/6254 -->
                    <classifier>exec</classifier>
                    <mainClass>${package}.ResourcesService</mainClass>
                    <layout>ZIP</layout>
                    <excludes>
                        <exclude>
                            <groupId>org.inferred</groupId>
                            <artifactId>freebuilder</artifactId>
                        </exclude>
                        <exclude>
                            <groupId>com.google.auto.value</groupId>
                            <artifactId>auto-value</artifactId>
                        </exclude>
                        <exclude>
                            <groupId>org.projectlombok</groupId>
                            <artifactId>lombok</artifactId>
                        </exclude>
                    </excludes>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>repackage</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>pre-integration-test</id>
                        <goals>
                            <goal>start</goal>
                        </goals>
                        <configuration>
                            <jvmArguments>
                                -javaagent:${settings.localRepository}/org/jacoco/org.jacoco.agent/${jacoco.version}/org.jacoco.agent-${jacoco.version}-runtime.jar=destfile=${jacoco.itReportPath},append=true
                            </jvmArguments>
                            <arguments>
                                <argument>--server.port=${integration.server.port}</argument>
                                <argument>--EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://user:user_pass@${it.eureka.host}:${it.eureka.port}/eureka/</argument>
                            </arguments>
                            <profiles>
                                <profile>it.env</profile>
                            </profiles>
                            <skip>${maven.integration-test.skip}</skip>
                        </configuration>
                    </execution>
                    <execution>
                        <id>post-integration-test</id>
                        <goals>
                            <goal>stop</goal>
                        </goals>
                        <configuration>
                            <skip>${maven.integration-test.skip}</skip>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <artifactId>maven-failsafe-plugin</artifactId>
                <configuration>
                    <systemPropertyVariables>
                        <test.server.port>${integration.server.port}</test.server.port>
                        <EUREKA_CLIENT_SERVICEURL_DEFAULTZONE>
                            http://user:user_pass@${it.eureka.host}:${it.eureka.port}/eureka/
                        </EUREKA_CLIENT_SERVICEURL_DEFAULTZONE>
                    </systemPropertyVariables>
                </configuration>
            </plugin>
            <plugin>
                <groupId>com.soebes.maven.plugins</groupId>
                <artifactId>echo-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <phase>integration-test</phase>
                        <goals>
                            <goal>echo</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <echos>
                        <echo>============= DockerProperties =============</echo>
                        <echo>DockerProperty docker.container.eureka.ip : ${docker.container.eureka.ip}</echo>
                        <echo>DockerProperty it.eureka.host : ${it.eureka.host}</echo>
                        <echo>DockerProperty it.eureka.port : ${it.eureka.port}</echo>
                    </echos>
                </configuration>
            </plugin>
            <plugin>
                <artifactId>maven-antrun-plugin</artifactId>
                <executions>
                    <execution>
                        <id>sleep-for-a-while</id>
                        <phase>post-integration-test</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <target>
                                <sleep seconds="15"/>
                            </target>
                        </configuration>
                    </execution>
                    <execution>
                        <id>fix-executable-permissions</id>
                        <phase>prepare-package</phase>
                        <configuration>
                            <target>
                                <chmod file="src/main/docker/*.sh" perm="755"/>
                                <chmod file="ci.sh" perm="755"/>
                            </target>
                        </configuration>
                        <goals>
                            <goal>run</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>com.spotify</groupId>
                <artifactId>docker-maven-plugin</artifactId>
            </plugin>
            <plugin>
                <artifactId>maven-install-plugin</artifactId>
                <executions>
                    <execution>
                        <id>default-install</id>
                        <phase>none</phase>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <artifactId>maven-deploy-plugin</artifactId>
                <executions>
                    <execution>
                        <id>default-deploy</id>
                        <phase>none</phase>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <dependencies>
        <dependency>
            <groupId>com.yirendai.infra</groupId>
            <artifactId>oss-lib-errorhandle-spring-boot-${spring-boot.version}</artifactId>
        </dependency>
        <!--dependency>
            <groupId>com.yirendai.infra</groupId>
            <artifactId>oss-lib-security-spring-boot-${spring-boot.version}</artifactId>
        </dependency-->
        <dependency>
            <groupId>com.yirendai.infra</groupId>
            <artifactId>oss-lib-swagger-spring-boot-${spring-boot.version}</artifactId>
            <scope>runtime</scope>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-devtools</artifactId>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-jpa</artifactId>
            <exclusions>
                <exclusion>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-starter-logging</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-eureka</artifactId>
        </dependency>
        <!--dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-config</artifactId>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-bus-amqp</artifactId>
            <scope>runtime</scope>
            <exclusions>
                <exclusion>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-starter-logging</artifactId>
                </exclusion>
            </exclusions>
        </dependency-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-jetty</artifactId>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
            <scope>runtime</scope>
        </dependency>

        <dependency>
            <groupId>com.h2database</groupId>
            <artifactId>h2</artifactId>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>com.zaxxer</groupId>
            <artifactId>HikariCP</artifactId>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>javax.servlet-api</artifactId>
        </dependency>
        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <scope>runtime</scope>
        </dependency>

        <dependency>
            <groupId>com.google.code.findbugs</groupId>
            <artifactId>annotations</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>com.jayway.restassured</groupId>
            <artifactId>rest-assured</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.yirendai.infra</groupId>
            <artifactId>oss-lib-test-spring-boot-${spring-boot.version}</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.assertj</groupId>
            <artifactId>assertj-core</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.restdocs</groupId>
            <artifactId>spring-restdocs-mockmvc</artifactId>
            <scope>test</scope>
        </dependency>
        <!--dependency>
            <groupId>org.springframework.restdocs</groupId>
            <artifactId>spring-restdocs-restassured</artifactId>
            <scope>test</scope>
        </dependency-->
        <!--dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-test</artifactId>
            <scope>test</scope>
        </dependency-->
    </dependencies>
</project>
